# Configuration Caddy générée automatiquement par SelfStart v0.3
# Générée le {{ timestamp }}
# Domaine: {{ base_domain }}

# Configuration globale
{
    admin off
    email admin@{{ base_domain }}
    
    servers {
        protocols h1 h2 h3
    }
}

{% for service in services | running_services %}
# Service: {{ service.name }} ({{ service.type }})
{{ service.name }}.{{ base_domain }} {
    @running `curl -sf http://{{ env.get('BACKEND_HOST', 'backend-api-v2') }}:{{ api_port }}/api/v2/status?name={{ service.name }} | grep -o '"status":"running"'`
    
    handle @running {
        {% for endpoint in service.endpoints %}
        reverse_proxy {{ endpoint.host }}:{{ endpoint.port }} {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            timeout 30s
            
            {% if service.auto_scale_enabled %}
            # Auto-scaling enabled
            health_uri {{ endpoint.health_check_path }}
            health_interval 30s
            {% endif %}
        }
        {% endfor %}
    }
    
    handle {
        reverse_proxy {{ env.get('FRONTEND_HOST', 'frontend-loader') }}:{{ frontend_port }} {
            header_up X-Container-Name {{ service.name }}
            {% if service.endpoints %}
            header_up X-Container-Port {{ service.endpoints[0].port }}
            {% endif %}
        }
    }
    
    log {
        output file /var/log/caddy/{{ service.name }}.log
        level INFO
    }
}

{% endfor %}

# Interface d'administration
{% if env.get('ENABLE_DASHBOARD', 'true') == 'true' %}
admin.{{ base_domain }} {
    reverse_proxy frontend-dashboard-v2:3000
    
    {% if env.get('ENABLE_BASIC_AUTH', 'false') == 'true' %}
    basicauth {
        {{ env.get('ADMIN_USERNAME', 'admin') }} {{ env.get('ADMIN_PASSWORD_HASH', '') }}
    }
    {% endif %}
    
    log {
        output file /var/log/caddy/admin.log
        level INFO
    }
}
{% endif %}

# Configuration locale pour développement
{% if base_domain == 'localhost' %}
localhost:{{ api_port }} {
    reverse_proxy backend-api-v2:8000
}

localhost:{{ frontend_port }} {
    reverse_proxy frontend-loader:3000
}

localhost:3001 {
    reverse_proxy frontend-dashboard-v2:3000
}
{% endif %}

# Gestion des erreurs globales
handle_errors {
    @404 expression `{http.error.status_code} == 404`
    handle @404 {
        respond "Service non disponible - Vérifiez la configuration SelfStart" 404
    }
    
    @500 expression `{http.error.status_code} >= 500`
    handle @500 {
        respond "Erreur serveur - Contactez l'administrateur" 500
    }
}
