# Configuration Caddy pour SelfStart
# Reverse proxy intelligent avec démarrage automatique de containers

# Configuration globale
{
    # Configuration automatique HTTPS
    email admin@{$BASE_DOMAIN}
    
    # Optimisations de performance
    servers {
        protocols h1 h2 h3
    }
}

# Route principale - Exemple avec Sonarr
sonarr.{$BASE_DOMAIN} {
    # Matcher pour vérifier si le container est en cours d'exécution
    @running `curl -sf http://backend-api:8000/api/status?name=sonarr | grep -o '"status":"running"'`
    
    # Si le container est en cours d'exécution, rediriger vers lui
    handle @running {
        reverse_proxy sonarr:8989 {
            # Headers pour préserver l'IP client
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            
            # Timeout augmenté pour les applications lentes
            timeout 30s
        }
    }
    
    # Sinon, afficher l'interface de chargement
    handle {
        reverse_proxy frontend-loader:3000 {
            header_up X-Container-Name sonarr
            header_up X-Container-Port 8989
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Logs pour debugging
    log {
        output file /var/log/caddy/sonarr.log
        level INFO
    }
}

# Dashboard d'administration
admin.{$BASE_DOMAIN} {
    reverse_proxy frontend-dashboard:3000 {
        header_up Host {host}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
    }
    
    # Authentification basique (optionnelle)
    @auth_enabled {
        env ENABLE_BASIC_AUTH true
    }
    
    handle @auth_enabled {
        basicauth {
            {$ADMIN_USERNAME} {$ADMIN_PASSWORD_HASH}
        }
    }
    
    log {
        output file /var/log/caddy/admin.log
        level INFO
    }
}

# Configuration pour le développement local (localhost)
localhost:8080 {
    # API backend accessible directement
    handle /api/* {
        reverse_proxy backend-api:8000
    }
    
    # Interface frontend
    handle {
        reverse_proxy frontend-loader:3000
    }
}

# API directe (pour développement)
api.{$BASE_DOMAIN} {
    reverse_proxy backend-api:8000 {
        header_up Host {host}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
    }
    
    log {
        output file /var/log/caddy/api.log
        level INFO
    }
}

# Gestion des erreurs globales
handle_errors {
    @404 expression `{http.error.status_code} == 404`
    handle @404 {
        respond "Service non disponible - Vérifiez la configuration SelfStart" 404
    }
    
    @500 expression `{http.error.status_code} >= 500`
    handle @500 {
        respond "Erreur serveur - Contactez l'administrateur" 500
    }
}